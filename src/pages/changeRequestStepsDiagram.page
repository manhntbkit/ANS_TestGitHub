<apex:page standardController="Change_Request__c" extensions="ChangeRequestStepListController">
     
 <apex:pageBlock title="Sequence of CR Steps for {!changeRequest.Name}">
     <div id="crStepDiagram"></div>
 </apex:pageBlock>
 <script type="text/javascript" language="Javascript">     
    var positionY = 50;
    var positionX = 50;
    var maxWidth = 900;
    var maxHeight = 1000;
    var terminalY = maxHeight - 250;
    var terminalX = 10;
    
    Joint.paper("crStepDiagram", maxWidth , maxHeight);
    var stepsDia= Joint.dia.fsa;
    var startStep= stepsDia.StartState.create({ 
                        position: {x: positionX, y: positionY }});
    var endStep= stepsDia.EndState.create({ position: {x: maxWidth - 50, y: (maxHeight-50) } });
    var allSteps = new Array();
    var allCRStepNames = new Array();
    var sizeOfStepList = {!CRStepList.size};
    var nextPointsArr = new Array();
    var alterPointsArr = new Array();
    var dependPointsArr = new Array();
    var index = -1;
   
    <apex:repeat var="crStep" value="{!CRStepList}">
        positionX += 150;
        index ++;
        if (positionX > maxWidth) {
            positionX = 50;
            positionY += 100;
        }
        var step_{!crStep.Id};
       
        if ("Decision Point" == "{!crStep.Step_Type__c}") {
            //Decision Point
            step_{!crStep.Id}= stepsDia.State.create({ position: {x: positionX , y: positionY}, 
                                        label: "{!crStep.Process_Step_Name__c}",
                                        attrs: {stroke: "black", fill: "yellow"} });
        } else if ("Terminal Step" == "{!crStep.Step_Type__c}") {
            terminalX += 150;
            step_{!crStep.Id}= stepsDia.State.create({ position: {x: terminalX, y: terminalY}, 
                                        label: "{!crStep.Process_Step_Name__c}",
                                        attrs: {stroke: "black", fill: "white"} });
            //Connect Ending Step to EndPoint
            step_{!crStep.Id}.joint(endStep, stepsDia.arrow);
        } else {
            //Activity Step
            step_{!crStep.Id}= stepsDia.State.create({ position: {x: positionX , y: positionY}, 
                                        label: "{!crStep.Process_Step_Name__c}",
                                        attrs: {stroke: "black", fill: "white"} });
        }
        allSteps.push(step_{!crStep.Id});
        allCRStepNames.push("step_{!crStep.Id}");
        
        //Connect StartPoint to Startting Step
        if ("Starting Step" == "{!crStep.Step_Type__c}") {
            startStep.joint(step_{!crStep.Id}, stepsDia.arrow);
        }
       
        if (('' + "{!crStep.Next_CR_Step__c}").length > 0) { 
            var nextPoint= new Array();
            nextPoint[index] = "step_{!crStep.Next_CR_Step__c}";
            nextPointsArr.push(nextPoint);
        }
        if (('' + "{!crStep.Alternate_CR_Step__c}").length > 0) {
            var alterPoint= new Array();
            alterPoint[index] = "step_{!crStep.Alternate_CR_Step__c}";
            alterPointsArr.push(alterPoint);
        }
        if (('' + "{!crStep.Dependent_CR_Step__c}").length > 0) {
            var dependPoint= new Array();
            dependPoint[index] = "step_{!crStep.Dependent_CR_Step__c}";
            dependPointsArr.push(dependPoint);
        }            
    </apex:repeat>
    
    //Draw the connecting line to next steps.
    for (var i=0; i<nextPointsArr.length; i++) {
        var nextPoint= nextPointsArr[i];
        for (var step in nextPoint) {
            var index = parseInt(step);
            var nextIndex = lookupIndexOf(allCRStepNames, nextPoint[step]);
            if(nextIndex > -1) {
                allSteps[index].joint(allSteps[nextIndex], stepsDia.arrow);
            }
        }
    }
    
    //Draw the connecting line to alternate steps.
    for (var i=0; i<alterPointsArr.length; i++) {
        var alterPoint= alterPointsArr[i];
        for (var step in alterPoint) {
            var index = parseInt(step);
            var alterIndex = lookupIndexOf(allCRStepNames, alterPoint[step]);
            if(alterIndex > -1) {
                allSteps[index].joint(allSteps[alterIndex], stepsDia.arrow);
            }
        }
    }
    
    //Draw the connecting line to dependent steps.
    for (var i=0; i<dependPointsArr.length; i++) {
        var dependPoint= dependPointsArr[i];
        for (var step in dependPoint) {
            var index = parseInt(step);
            var dependIndex = lookupIndexOf(allCRStepNames, dependPoint[step]);
            if(dependIndex > -1) {
                allSteps[index].joint(allSteps[dependIndex]);
            }
        }
    }
    
    
    //This method is to find the index of step in array.
    function lookupIndexOf(stepNameArray, stepName) {
         for (var i=0; i<stepNameArray.length; i++) {
             if(stepName == stepNameArray[i]) {
                 return i;
             }
         }         
         return -1;
    }
 </script>
 

 <!--<apex:includeScript value="{!URLFOR($Resource.JointJS_Library, 'joint.all.min.js')}"/>-->
 <apex:includeScript value="{!URLFOR($Resource.JointJS_Library, 'raphael.js')}"/>
 <apex:includeScript value="{!URLFOR($Resource.JointJS_Library, 'joint.min.js')}"/>
 <apex:includeScript value="{!URLFOR($Resource.JointJS_Library, 'joint.dia.min.js')}"/>
 <apex:includeScript value="{!URLFOR($Resource.JointJS_Library, 'joint.dia.fsa.min.js')}"/>
</apex:page>